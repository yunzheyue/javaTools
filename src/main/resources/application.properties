server.port=8089
spring.application.name=lbing-test

## minio文件系统
boots.module.minio.url=http://10.170.58.160:9000
boots.module.minio.accessKey=minioadmin
boots.module.minio.secretKey=minioadmin
boots.module.minio.defaultBkN=default
boots.module.minio.pointCloudBkN=3dtile

#-----------kafka-----------------------
#原始数据kafka读取
kafka.consumer.servers=10.170.58.160:9092
kafka.consumer.enable.auto.commit=true
kafka.consumer.session.timeout=20000
kafka.consumer.auto.commit.interval=100
kafka.consumer.auto.offset.reset=latest
kafka.consumer.topic=my-replicated-topic
kafka.consumer.group.id=test-consumer-group
kafka.consumer.concurrency=10

#协议转换后存储kafka
kafka.producer.servers=10.170.58.160:9092
kafka.producer.topic=my-replicated-topic
kafka.producer.retries=0
kafka.producer.batch.size=4096
kafka.producer.linger=1
kafka.producer.buffer.memory=40960



#-----------rocketmq-----------------------
###producer
#该应用是否启用生产者
rocketmq.producer.isOnOff=on
#发送同一类消息的设置为同一个group，保证唯一,默认不需要设置，rocketmq会使用ip@pid(pid代表jvm名字)作为唯一标示
rocketmq.producer.groupName=material
#mq的nameserver地址
rocketmq.producer.namesrvAddr=10.138.40.18:9876
#消息最大长度 默认1024*4(4M)
rocketmq.producer.maxMessageSize=4096
#发送消息超时时间,默认3000
rocketmq.producer.sendMsgTimeout=3000
#发送消息失败重试次数，默认2
rocketmq.producer.retryTimesWhenSendFailed=2

###consumer
##该应用是否启用消费者
rocketmq.consumer.isOnOff=on
rocketmq.consumer.groupName=material
#mq的nameserver地址
rocketmq.consumer.namesrvAddr=10.170.58.8:9876
#该消费者订阅的主题和tags("*"号表示订阅该主题下所有的tags),格式：topic~tag1||tag2||tag3;topic2~*;
rocketmq.consumer.topics=TopicTest~*;
rocketmq.consumer.consumeThreadMin=20
rocketmq.consumer.consumeThreadMax=64
#设置一次消费消息的条数，默认为1条
rocketmq.consumer.consumeMessageBatchMaxSize=1


#-----------数据库-----------------------
spring.datasource.bn-lbs.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.bn-lbs.driver-class-name=org.postgresql.Driver
spring.datasource.bn-lbs.url=jdbc:postgresql://10.138.40.17:5432/material_process_db?useUnicode=true&characterEncoding=utf-8&useSSL=false&stringtype=unspecified
spring.datasource.bn-lbs.username=postgres
spring.datasource.bn-lbs.password=postgres
spring.datasource.bn-lbs.initialSize=10
spring.datasource.bn-lbs.minIdle=10
spring.datasource.bn-lbs.maxActive=50
spring.datasource.bn-lbs.maxWait=60000
spring.datasource.bn-lbs.timeBetweenEvictionRunsMillis=60000
spring.datasource.bn-lbs.minEvictableIdleTimeMillis=300000
spring.datasource.bn-lbs.validationQuery=SELECT 1
spring.datasource.bn-lbs.testWhileIdle=true
spring.datasource.bn-lbs.testOnBorrow=false
spring.datasource.bn-lbs.testOnReturn=false
spring.datasource.bn-lbs.poolPreparedStatements=true
spring.datasource.bn-lbs.maxPoolPreparedStatementPerConnectionSize=50
spring.datasource.bn-lbs.filters=stat,wall,slf4j
spring.datasource.bn-lbs.useGlobalDataSourceStat=true
spring.datasource.bn-lbs.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
#mybatis日志
mybatis-plus.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl
#返回json的全局时间格式
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
#spring.jackson.time-zone=GMT+8

#配置mapper xml文件的路径
mybatis-plus.mapper-locations=classpath:com/example/demo/mapper/xml/*.xml
#-----------Redis-----------------------

# Redis数据库索引（默认为0）
spring.redis.database=15
# Redis服务器地址
spring.redis.host=10.58.176.76
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.jedis.pool.max-active=200
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.jedis.pool.max-wait=
# 连接池中的最大空闲连接
spring.redis.jedis.pool.max-idle=10
# 连接池中的最小空闲连接
spring.redis.jedis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=1000


